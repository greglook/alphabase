version: 2.1

# Common executor configuration
executors:
  clojure:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.1
    working_directory: ~/repo


# Job definitions
jobs:
  style:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install cljstyle
          environment:
            CLJSTYLE_VERSION: 0.15.0
          command: |
            wget https://github.com/greglook/cljstyle/releases/download/${CLJSTYLE_VERSION}/cljstyle_${CLJSTYLE_VERSION}_linux.zip
            unzip cljstyle_${CLJSTYLE_VERSION}_linux.zip
      - run:
          name: Check source formatting
          command: "./cljstyle check --report --stats style-stats.tsv"
      - store_artifacts:
          path: style-stats.tsv
          destination: style

  lint:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install clj-kondo
          environment:
            CLJ_KONDO_VERSION: 2021.10.19
          command: |
            wget https://github.com/borkdude/clj-kondo/releases/download/v${CLJ_KONDO_VERSION}/clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
            unzip clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
      - run:
          name: Lint source code
          command: "./clj-kondo --lint src test"

  clj-test:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-clj-test-{{ checksum "project.clj" }}
            - v1-clj-test-
      - run: lein with-profile +test,+kaocha deps
      - save_cache:
          key: v1-clj-test-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
      - run: lein check
      - run: lein test

  cljs-test:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-cljs-test-{{ checksum "project.clj" }}
            - v1-cljs-test-
            - v1-clj-test-
      - run:
          name: Install nodejs
          command: |
            curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -
            sudo apt-get install -y nodejs
      - run: npm install ws
      - run: lein with-profile +test,+kaocha deps
      - save_cache:
          key: v1-cljs-test-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
            - ~/repo/node_modules
      - run: lein cljs:check
      - run: lein cljs:test

  coverage:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-coverage-{{ checksum "project.clj" }}
            - v1-coverage-
            - v1-clj-test-
      - run:
          name: Generate test coverage
          command: lein coverage --codecov
      - save_cache:
          paths:
            - ~/.m2
          key: v1-coverage-{{ checksum "project.clj" }}
      - store_artifacts:
          path: target/coverage
          destination: coverage
      - run:
          name: Install codecov
          command: |
            sudo apt-get update && sudo apt-get install gpg
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x codecov
      - run:
          name: Publish coverage report
          command: './codecov -f target/coverage/codecov.json'


# Workflow definitions
workflows:
  version: 2
  test:
    jobs:
      - style
      - lint
      - clj-test
      - cljs-test
      - coverage:
          requires:
            - clj-test
